plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.5.0'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

group 'cn.com.lasong.plugin.idea'
version '1.0.0'

patchPluginXml {
    changeNotes """
      <b>1.0.0</b>
      <ul>
        <li>display all bytecode for jar file, you can modify & save the jar file.</li>
      </ul>
      """

    pluginDescription """
      A decompilation tool for .jar & .apk, the commands like this:
      <br/>
      <ul>
        <li>JarModify</li>
        <li>Apk2Smali</li>
      </ul>
      </br>
      For jar way:
      <ul>
        <li>select .jar file -> Right Click -> AndroidZer -> JarModify</li>
        <img src="https://github.com/zhusonger/androidz_plugin_idea/blob/master/images/jar1.png?raw=true" width="320" height="220">
      </ul>
      </br>
      For apk way:
      <ul>
        <li>select .apk file -> Right Click -> AndroidZer -> Apk2Smali</li>
      </ul>
      
      一个用于jar与apk文件的反编译工具, 可用的命令如下:
      <br/>
      <ul>
        <li>JarModify</li>
        <li>Apk2Smali</li>
      </ul>
      </br>
      用于jar的方式:
      <ul>
        <li>选择jar文件 -> 右键 -> AndroidZer -> JarModify</li>
      </ul>
      </br>
      用于apk的方式:
      <ul>
        <li>选择apk文件 -> 右键 -> AndroidZer -> Apk2Smali</li>
      </ul>
      """
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // javassist 相关修改字节码
    implementation 'org.javassist:javassist:3.27.0-GA'
    // 字节码转文本
    implementation 'org.jd:jd-core:1.1.3'
    // 高亮显示的textarea
    implementation 'com.fifesoft:rsyntaxtextarea:3.1.1'
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    // Define IntelliJ Platform against which to build the plugin project.
    version '2020.2.1'

    pluginName 'AndroidZer'

    // 版本兼容
    updateSinceUntilBuild false
    sameSinceUntilBuild false
}


runIde {
    // Absolute path to installed target 3.5 Android Studio to use as IDE Development Instance
    // The "Contents" directory is macOS specific.
    ideDirectory '/Applications/Android Studio.app/Contents'
}

publishPlugin {
    token intellijPublishToken
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}